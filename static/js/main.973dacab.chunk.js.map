{"version":3,"sources":["components/Header.js","components/QueuedSongList.js","components/SongPlayer.js","graphQL/subscriptions.js","components/SongList.js","graphQL/mutations.js","components/AddSong.js","reducer.js","App.js","theme.js","graphQL/client.js","index.js"],"names":["useStyles","makeStyles","theme","title","marginLeft","spacing","Header","avatar","width","height","text","textOverflow","overflow","container","display","gridAutoFlow","gridTemplateColumns","gridGap","alignItems","marginTop","songInfoContainer","whiteSpace","QueuedSong","song","artist","thumbnail","classes","className","Avatar","src","Typography","variant","color","IconButton","Delete","QueuedSongList","greaterThanMd","useMediaQuery","breakpoints","up","style","margin","Array","from","length","map","i","key","justifyContent","details","flexDirection","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","useContext","SongContext","state","dispatch","Card","CardContent","component","SkipPrevious","onClick","isPlaying","type","Pause","PlayArrow","SkipNext","Slider","min","max","step","CardMedia","image","GET_SONGS","gql","songInfo","objectFit","Song","id","useState","currentSongPlaying","setCurrentSongPlaying","console","log","useEffect","isSongPlaying","gutterBottom","CardActions","payload","size","Save","SongList","useSubscription","data","loading","error","CircularProgress","songs","ADD_SONG","urLInput","addSongButton","dialog","textAlign","DEFAULT_SONG","duration","AddSong","url","setUrl","useMutation","addSong","playable","setPlayable","setDialog","setSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYouTubeInfo","getCurrentSound","getSoundCloudInfo","getDuration","video_id","author","Promise","resolve","Number","user","username","artwork_url","replace","variables","handleError","field","graphQLErrors","extensions","path","includes","handleChangeSong","e","target","name","value","prevSong","isPlayable","SoundcloudPlayer","canPlay","YoutubePlayer","Dialog","open","onClose","DialogTitle","DialogContent","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","placeholder","InputProps","startAdornment","InputAdornment","position","Link","disabled","preventDefault","endIcon","AddBoxOutlined","hidden","onReady","songReducer","action","React","createContext","displayName","App","initialSongState","useReducer","greaterThanSM","Provider","Hidden","only","Grid","paddingTop","item","xs","md","top","right","left","bottom","createMuiTheme","palette","primary","teal","secondary","purple","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.973dacab.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, Typography, makeStyles } from '@material-ui/core';\nimport HeadsetTwoToneIcon from '@material-ui/icons/HeadsetTwoTone';\n\n// Material UI allows to make a custom hook for each of our components, it will make it easy to pass own custom styles throughout the app\n\n//makestyles function - holds all of the individual styles that I have for each part of the component\n\n\n// Accepts an object\nconst useStyles = makeStyles(theme => ({\n    title: {\n        // marginLeft: '8px',\n        marginLeft: theme.spacing(2),\n    }\n}));\n\nfunction Header() {\n    const classes = useStyles();\n\n    return (\n        // Header now has a primary color of teal comes from theme file\n        <AppBar color=\"primary\" position='fixed'>\n            <Toolbar>\n                <HeadsetTwoToneIcon />\n                <Typography className={classes.title} variant=\"h6\" component=\"h1\">\n                    Apollo Music Share\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { Typography, Avatar, IconButton, makeStyles, useMediaQuery } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\n\nfunction QueuedSongList() {\n    const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up('md'));\n\n    const song = {\n        title: \"LUNE\",\n        artist: \"MOON\",\n        thumbnail: \"https://picsum.photos/id/237/100/100\"\n    }\n\n    return greaterThanMd && (\n        <div style={{ margin: '10px 0' }}>\n            <Typography color=\"textSecondary\" variant=\"button\">\n                QUEUE (5)\n            </Typography>\n            {Array.from({ length: 5 }, () => song).map((song, i) => (\n                <QueuedSong key={i} song={song} />\n            ))}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    avatar: {\n        width: 44,\n        height: 44,\n    },\n    text: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden'\n    },\n    container: {\n        display: 'grid',\n        gridAutoFlow: 'column',\n        gridTemplateColumns: '50px auto 50px',\n        gridGap: 12,\n        alignItems: 'center',\n        marginTop: 10\n    },\n    songInfoContainer: {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap'\n    }\n})\n\nfunction QueuedSong({ song }) {\n    const { title, artist, thumbnail } = song;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <Avatar src={thumbnail} className={classes.avatar} />\n            <div className={classes.songInfoContainer}>\n                <Typography className={classes.text} variant=\"subtitle2\">\n                    {title}\n                </Typography>\n                <Typography className={classes.text} color=\"textSecondary\" variant=\"body2\">\n                    {artist}\n                </Typography>\n            </div>\n            <IconButton>\n                <Delete color=\"error\" />\n            </IconButton>\n        </div>\n    );\n\n}\n\nexport default QueuedSongList;\n","import React, { useContext } from 'react';\nimport QueuedSongList from './QueuedSongList';\nimport { Card, CardContent, Typography, IconButton, Slider, CardMedia, makeStyles } from '@material-ui/core';\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from '@material-ui/icons';\nimport { SongContext } from '../App';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '0px 15px',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    thumbnail: {\n        width: 150,\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1)\n    },\n    playIcon: {\n        height: 38,\n        width: 38\n    }\n}))\n\nfunction SongPlayer() {\n    const { state, dispatch } = useContext(SongContext);\n    const classes = useStyles();\n\n\n    function handleTogglePlay() {\n        // Toggle state\n        dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" })\n    }\n\n    return (\n        <>\n            <Card variant=\"outlined\" className={classes.container}>\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            {state.song.title}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n                            {state.song.title}\n                        </Typography>\n                    </CardContent>\n                    <div className={classes.controls}>\n                        <IconButton>\n                            <SkipPrevious />\n                        </IconButton>\n                        <IconButton onClick={handleTogglePlay}>\n                            {/* Toggle icons */}\n                            {state.isPlaying ? <Pause className={classes.playIcon} /> : <PlayArrow className={classes.playIcon} />}\n                        </IconButton>\n                        <IconButton>\n                            <SkipNext />\n                        </IconButton>\n                        <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n                            00:01:30\n                        </Typography>\n                    </div>\n                    <Slider\n                        type=\"range\"\n                        min={0}\n                        max={1}\n                        step={0.01}\n                    />\n                </div>\n                <CardMedia\n                    className={classes.thumbnail}\n                    image={state.song.thumbnail}\n                />\n            </Card>\n            <QueuedSongList />\n        </>\n    )\n}\n\nexport default SongPlayer;","import { gql } from '@apollo/client';\n// All graphQL queries live here\n\nexport const GET_SONGS = gql`\nsubscription getSongs {\n    songs(order_by: {created_at: desc}){\n        artist\n        duration\n        id\n        thumbnail\n        title\n        url\n    }\n  }\n`;\n\n","import React, { useContext, useEffect, useState } from 'react';\nimport { CircularProgress, Card, CardMedia, CardContent, Typography, CardActions, IconButton, makeStyles } from '@material-ui/core';\nimport { PlayArrow, Save, Pause } from '@material-ui/icons';\nimport { useSubscription } from '@apollo/client';\nimport { GET_SONGS } from '../graphQL/subscriptions';\nimport { SongContext } from '../App';\n\nfunction SongList() {\n    // Remove loading variable instead use hook useQuery\n    // let loading = false;\n\n    const { data, loading, error } = useSubscription(GET_SONGS);\n\n\n    // If true show loading spinner\n    if (loading) {\n        return (\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                marginTop: 50\n            }}>\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if (error) return <div>Error fetching songs</div>\n\n    return <div>{data.songs.map(song => (\n        <Song key={song.id} song={song} />\n    ))}</div>;\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: theme.spacing()\n    },\n    songInfoContainer: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    songInfo: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    thumbnail: {\n        objectFit: 'cover',\n        width: 140,\n        height: 140\n    }\n}))\n\nfunction Song({ song }) {\n    const { title, artist, thumbnail, id } = song;\n    const [currentSongPlaying, setCurrentSongPlaying] = useState(false);\n    const { state, dispatch } = useContext(SongContext);\n\n    console.log(song);\n\n\n    useEffect(() => {\n        const isSongPlaying = state.isPlaying && id === state.song.id;\n        setCurrentSongPlaying(isSongPlaying);\n        // I want to identify song with it's id that's why sync it with state.song.id\n    }, [id, state.isPlaying, state.song.id])\n\n    const classes = useStyles();\n\n    function handleTogglePlay() {\n        dispatch({ type: \"SET_SONG\", payload: { song } })\n\n        dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" })\n    }\n\n    return (\n        <Card className={classes.container}>\n            <div className={classes.songInfoContainer}>\n                <CardMedia className={classes.thumbnail} image={thumbnail} />\n                <div className={classes.songInfo}>\n                    <CardContent >\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {title}\n                        </Typography>\n                        <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n                            {artist}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\n                            {currentSongPlaying ? <Pause /> : <PlayArrow />}\n                        </IconButton>\n                        <IconButton size=\"small\" color=\"secondary\">\n                            <Save color=\"secondary\" />\n                        </IconButton>\n                    </CardActions>\n                </div>\n            </div>\n        </Card>\n    )\n}\n\nexport default SongList;","import { gql } from '@apollo/client';\n\n\nconst ADD_SONG = gql`\nmutation addSong($title: String!, $artist: String!, $thumbnail: String!, $duration: Float!, $url: String!) {\n    insert_songs(objects: {url: $url, title: $title, thumbnail: $thumbnail, duration: $duration, artist: $artist}) {\n      affected_rows\n    }\n  }\n`;\n\nexport default ADD_SONG;","import React, { useState, useEffect } from 'react';\nimport QueuedSongList from './QueuedSongList';\nimport {\n    TextField,\n    InputAdornment,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    makeStyles,\n    duration\n} from '@material-ui/core';\nimport { Link, AddBoxOutlined } from '@material-ui/icons';\nimport SoundcloudPlayer from 'react-player/lib/players/SoundCloud';\nimport YoutubePlayer from 'react-player/lib/players/YouTube';\nimport ReactPlayer from 'react-player';\nimport ADD_SONG from '../graphQL/mutations';\nimport { useMutation } from '@apollo/client';\n\n// Custom styles \nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: \"flex\",\n        alignItems: 'center'\n    },\n    urLInput: {\n        margin: theme.spacing(1),\n    },\n    addSongButton: {\n        margin: theme.spacing(1),\n    },\n    dialog: {\n        textAlign: 'center'\n    },\n    thumbnail: {\n        width: '90%'\n    }\n\n}))\n\nconst DEFAULT_SONG = {\n    duration: 0,\n    title: \"\",\n    artist: \"\",\n    thumbnail: \"\"\n}\n\nfunction AddSong() {\n    const [url, setUrl] = useState('');\n    // Distract a 2 value 'error data' from useMutation, now it's available for everything within return\n    const [addSong, { error }] = useMutation(ADD_SONG);\n    const [playable, setPlayable] = useState(false);\n    const classes = useStyles();\n    const [dialog, setDialog] = useState(false);\n    const [song, setSong] = useState(DEFAULT_SONG);\n\n    // Returns error object where more info about error and validation\n    // console.dir(error);\n\n    useEffect(() => {\n        const isPlayable = SoundcloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url);\n\n        setPlayable(isPlayable);\n    }, [url])\n\n\n    // Open dialog\n    function handleDialog(e) {\n        e.preventDefault();\n        setDialog(true);\n    }\n\n    function handleUrlChange(e) {\n        setUrl(e.target.value);\n    }\n\n    // Close dialog\n    function handleCloseDialog() {\n        setDialog(false);\n    }\n\n    async function handleEditSong({ player }) {\n        const nestedPlayer = player.player.player;\n        let songData;\n\n        if (nestedPlayer.getVideoData) {\n            songData = getYouTubeInfo(nestedPlayer);\n        } else if (nestedPlayer.getCurrentSound) {\n            songData = await getSoundCloudInfo(nestedPlayer);\n        }\n\n        setSong({ ...songData, url });\n\n    }\n\n    function getYouTubeInfo(player) {\n        const duration = player.getDuration();\n        const { title, video_id, author } = player.getVideoData();\n        const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\n\n        return {\n            duration,\n            title,\n            artist: author,\n            thumbnail\n        }\n    }\n\n    function getSoundCloudInfo(player) {\n        return new Promise(resolve => {\n            player.getCurrentSound(songData => {\n                if (songData) {\n                    resolve({\n                        duration: Number(songData.duration / 1000),\n                        title: songData.title,\n                        artist: songData.user.username,\n                        thumbnail: songData.artwork_url.replace('-large', '-t500x500')\n                    })\n                }\n            });\n        })\n    }\n\n    async function handleAddSong() {\n        try {\n            //  addSong({ variables: { ...song } })\n            const { url, duration, title, artist, thumbnail } = song;\n            // addSong returns a  promise\n            await addSong({\n                variables: {\n                    url: url.length > 0 ? url : null, //check if properties aren't empty\n                    title: title.length > 0 ? title : null,\n                    artist: artist.length > 0 ? artist : null,\n                    thumbnail: thumbnail.length > 0 ? thumbnail : null,\n                    duration: duration > 0 ? duration : null\n                }\n            })\n\n            // When song is added: \n            //1. Close dialog\n            //2. Clear dialog and url\n            handleCloseDialog();\n            setSong(DEFAULT_SONG);\n            setUrl(\"\");\n        } catch (error) {\n            console.error(\"Error adding song\", error); // hasura throwing an error/ graphQL related error\n\n        }\n\n\n    }\n\n\n    function handleError(field){\n        // Only if an error then I want to return computed graphQL value\n        // return error && error.graphQLErrors[0].extensions.path.includes(field);\n        return error?.graphQLErrors[0]?.extensions?.path.includes(field);\n    }\n\n    function handleChangeSong(e) {\n        const { name, value } = e.target;\n        setSong(prevSong => ({\n            ...prevSong,\n            [name]: value\n        }))\n    }\n\n    const { title, artist, thumbnail } = song;\n\n    return (\n        <div className={classes.container}>\n            <Dialog\n                className={classes.dialog}\n                open={dialog}\n                onClose={handleCloseDialog}\n            >\n                <DialogTitle>Edit Song</DialogTitle>\n                <DialogContent>\n                    <img\n                        src={thumbnail}\n                        alt=\"Song thumbnail\"\n                        className={classes.thumbnail}\n                    />\n                    <TextField\n                        onChange={handleChangeSong}\n                        margin=\"dense\"\n                        name=\"title\"\n                        label=\"Title\"\n                        value={title}\n                        fullWidth\n                        error={handleError('title')}\n                        helperText={handleError('title') && \"Fill out field\"}\n                    />\n                    <TextField\n                        onChange={handleChangeSong}\n                        margin=\"dense\"\n                        name=\"artist\"\n                        label=\"Artist\"\n                        value={artist}\n                        fullWidth\n                        error={handleError('artist')}\n                        helperText={handleError('artist') && \"Fill out field\"}\n                    />\n                    <TextField\n                        onChange={handleChangeSong}\n                        margin=\"dense\"\n                        name=\"thumbnail\"\n                        label=\"Thumbnail\"\n                        value={thumbnail}\n                        fullWidth\n                        error={handleError('thumbnail')}\n                        helperText={handleError('thumbnail') && \"Fill out field\"}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={handleCloseDialog}\n                        color=\"secondary\"\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={handleAddSong}\n                    >\n                        Add Song\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <TextField\n                className={classes.urLInput}\n                onChange={handleUrlChange}\n                value={url}\n                placeholder=\"Add Youtube or Soundcloud url\"\n                fullWidth\n                margin=\"normal\"\n                type=\"url\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <Link />\n                        </InputAdornment>\n                    )\n                }}\n            />\n            <Button\n                // If the song isn't playable disable button\n                disabled={!playable}\n                className={classes.addSongButton}\n                onClick={handleDialog}\n                variant=\"contained\"\n                color=\"primary\"\n                endIcon={<AddBoxOutlined />}\n            >\n                Add\n            </Button>\n            <ReactPlayer url={url} hidden onReady={handleEditSong} />\n        </div>\n    )\n}\n\nexport default AddSong;","function songReducer(state, action) {\n    switch (action.type) {\n        case \"PLAY_SONG\":\n            return { ...state, isPlaying: true }\n        case \"PAUSE_SONG\":\n            return { ...state, isPlaying: false }\n        case \"SET_SONG\":\n            return {\n                ...state,\n                song: action.payload.song,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default songReducer;","import React, { useContext } from 'react';\nimport Header from './components/Header';\nimport SongPlayer from './components/SongPlayer';\nimport SongList from './components/SongList';\nimport AddSong from './components/AddSong';\nimport { Grid, useMediaQuery, Hidden } from '@material-ui/core';\nimport songReducer from './reducer';\n\n// Hide elements without conditions, using Hidden component\n// Wrap component in a Hidden comp and specify on it at what breakpoint I want to be hidden on\n\n\nexport const SongContext = React.createContext({\n  song: {\n    id: \"3561c605-d486-44cb-9bba-d1beeb641778\",\n    title: \"LUNE\",\n    artist: \"MOON\",\n    thumbnail: \"https://picsum.photos/id/237/100/100\",\n    duration: 250,\n    url: \"https://music.youtube.com/watch?v=--ZtUFsIgMk&feature=share\"\n  },\n  isPlaying: false\n});\n\nSongContext.displayName = \"SongContext\";\n\n\nfunction App() {\n\n  const initialSongState = React.useContext(SongContext);\n\n  const [state, dispatch] = React.useReducer(songReducer, initialSongState);\n\n  // Media query breakpoint, hook comes from material-ui library\n  // If min-width === 600px ? true : false \n  // const matches = useMediaQuery('(min-width: 600px)');\n\n  // I can use the theme data as well as its built-in values to set specific breakpoints (down, up)\n  const greaterThanSM = useMediaQuery(theme => theme.breakpoints.up('sm'));\n\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up('md'));\n\n  console.log(state, \"This is my state\");\n\n  /* {greaterThanSM && <Header />} */\n  return (\n    <SongContext.Provider value={{ state, dispatch }} >\n      <Hidden only=\"xs\">\n        <Header />\n      </Hidden>\n      <Grid container spacing={3}>\n        <Grid style={\n          {\n            paddingTop: greaterThanSM ? 80 : 10\n          }\n        } item xs={12} md={7}>\n          <AddSong />\n          <SongList />\n        </Grid>\n        <Grid\n          style={\n            greaterThanMd\n              ?\n              {\n                position: 'fixed',\n                width: '100%',\n                top: 70,\n                right: 0\n              }\n              : {\n                position: 'fixed',\n                width: '100%',\n                left: 0,\n                bottom: 0\n              }\n          }\n          item\n          xs={12}\n          md={5}>\n          <SongPlayer />\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  )\n}\n\n\nexport default App;\n\n// Create a new GraphQL app [apollo music share] => deploy\n// ","import { createMuiTheme } from '@material-ui/core';\nimport { teal, purple } from '@material-ui/core/colors';\nimport { dark } from '@material-ui/core/styles/createPalette';\n\n//To make theme available for each react component will use react context hook\n\nconst theme = createMuiTheme({\n    palette: {\n        // In addition type property sets light/dark theme\n        type: \"dark\",\n        primary: teal,\n        secondary: purple\n    }\n})\n\nexport default theme;","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { WebSocketLink } from 'apollo-link-ws';\n\nconst client = new ApolloClient({\n    link: new WebSocketLink({\n\n        uri: 'wss://welcome-chipmunk-46.hasura.app/v1/graphql',\n        options: {\n            reconnect: true,\n        }\n    }),\n    cache: new InMemoryCache()\n})\n\n// const client = new ApolloClient({\n//     uri: 'https://welcome-chipmunk-46.hasura.app/v1/graphql',\n//     cache: new InMemoryCache()\n// });\n\nexport default client;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport theme from './theme';\nimport { ApolloProvider } from '@apollo/client';\nimport client from './graphQL/client';\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline enables to have dark theme */}\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </React.StrictMode >\n  </ApolloProvider>,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}